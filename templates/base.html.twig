<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>{% block title %}{% endblock %}</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet"
          integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css">
    <style>
        body[data-theme='dark'] {
            background-color: #121212;
            color: white;
        }

        body[data-theme='dark'] .navbar {
            background-color: #000000;
        }

        body[data-theme='dark'] .nav-link {
            color: white;
        }

        body[data-theme='dark'] .nav-link:hover {
            color: #adb5bd;
        }

        .navbar-nav .nav-item {
            display: flex;
            align-items: center; /* Aligne les éléments au centre */
        }

        .info-block {
            width: 13rem;
            margin-left: 10px;
            min-height: 100px; /* Ajustez cette valeur selon vos besoins */
            display: flex; /* Utilisation de flexbox pour aligner le contenu */
            flex-direction: column; /* Orientation verticale */
            justify-content: space-between; /* Espacement égal entre les éléments */
        }
    </style>
</head>

<body data-theme="light">
<header>
    <nav class="navbar navbar-expand-lg navbar-light bg-light" id="navbar">
        <div class="container-fluid">
            <img src="{{ asset('images/logoVeliko.png') }}" alt="Logo Veliko" width="100" height="100">
            <a class="navbar-brand" href="/">Veliko</a>

            <button class="navbar-toggler" type="button" data-bs-toggle="collapse"
                    data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent"
                    aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>

            <div class="collapse navbar-collapse" id="navbarSupportedContent">
                <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                    <li class="nav-item">
                        <a class="nav-link active" aria-current="page" href="/">Carte</a>
                    </li>
                    <li class="nav-item">
                        <button class="btn btn-link nav-link" id="geolocate">Géolocalisez-moi</button>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/register">S'inscrire</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/login">Se connecter</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/station/favoris">Stations Favoris</a>
                    </li>
                </ul>

                <!-- Logo Paramètres complètement à droite -->
                <ul class="navbar-nav ms-auto">
                    <li class="nav-item">
                        <a class="nav-link" href="/parametre" style="display: flex; align-items: center;">
                            <img src="{{ asset('images/userlogin.png') }}" alt="Paramètres" width="50" height="50">
                        </a>
                    </li>
                    <li class="nav-item">
                        <button id="toggle-theme" class="nav-link"
                                style="border: none; background: none; font-size: 1.5rem;">
                            <i id="theme-icon" class="bi bi-sun"></i>
                        </button>
                    </li>
                    <!-- Encadré pour la météo à droite -->
                    <li class="nav-item">
                        <div id="weather" class="card info-block">
                            <div class="card-body d-flex justify-content-between align-items-center">
                                <div>
                                    <h5 class="card-title">Météo à Paris</h5>
                                    <p id="weather-info" class="card-text">Chargement...</p>
                                </div>
                                <i id="weather-icon" class="bi" style="font-size: 2rem;"></i>
                            </div>
                        </div>
                    </li>
                    <!-- Encadré pour le calendrier à droite -->
                    <li class="nav-item">
                        <div id="calendar" class="card info-block">
                            <div class="card-body">
                                <h5 class="card-title">Date & Heure</h5>
                                <p id="clock-info" class="card-text">
                                    <i id="time-icon" class=""></i> <!-- Icône du soleil ou de la lune -->
                                    Chargement...
                                </p>
                            </div>
                        </div>
                    </li>
                </ul>
            </div>
        </div>
    </nav>
</header>

<div class="container-fluid">
    {% block body %}{% endblock %}
    {% block footer %}{% endblock %}
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p"
        crossorigin="anonymous"></script>
{% block javascripts %}{% endblock %}

<!-- Script pour le changement de thème -->
<script>
    const toggleThemeButton = document.getElementById('toggle-theme');
    const themeIcon = document.getElementById('theme-icon');

    function applyTheme() {
        const currentTheme = localStorage.getItem('theme') || 'light';
        document.body.setAttribute('data-theme', currentTheme);
        themeIcon.className = currentTheme === 'dark' ? 'bi bi-sun' : 'bi bi-moon';
        const navbar = document.getElementById('navbar');
        navbar.classList.toggle('navbar-dark', currentTheme === 'dark');
        navbar.classList.toggle('navbar-light', currentTheme !== 'dark');
        navbar.classList.toggle('bg-dark', currentTheme === 'dark');
        navbar.classList.toggle('bg-light', currentTheme !== 'dark');
    }

    applyTheme();

    toggleThemeButton.addEventListener('click', () => {
        const currentTheme = document.body.getAttribute('data-theme');
        const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
        document.body.setAttribute('data-theme', newTheme);
        themeIcon.className = newTheme === 'dark' ? 'bi bi-sun' : 'bi bi-moon';
        localStorage.setItem('theme', newTheme);
        const navbar = document.getElementById('navbar');
        navbar.classList.toggle('navbar-dark', newTheme === 'dark');
        navbar.classList.toggle('navbar-light', newTheme !== 'dark');
        navbar.classList.toggle('bg-dark', newTheme === 'dark');
        navbar.classList.toggle('bg-light', newTheme !== 'dark');
    });
</script>

<!-- Script pour la météo de Paris -->
<script>
    async function fetchWeather() {
        const apiKey = 'f3ac20a9bee6206db04871f2b9e4eb42';
        const url = `https://api.openweathermap.org/data/2.5/weather?q=Paris&appid=${apiKey}&units=metric&lang=fr`;

        try {
            const response = await fetch(url);
            if (!response.ok) {
                throw new Error(`Erreur : ${response.status}`);
            }

            const data = await response.json();
            const temperature = data.main.temp;
            const weatherDescription = data.weather[0].main; // Extrait le type de temps (ex : Clear, Rain, etc.)
            const currentHour = new Date().getHours(); // Récupère l'heure actuelle pour détecter la nuit

            // Debug pour voir les valeurs
            console.log("Météo actuelle :", weatherDescription);
            console.log("Heure actuelle :", currentHour);

            // Met à jour l'info météo
            document.getElementById('weather-info').innerHTML = `${temperature} °C`;

            // Change l'icône en fonction des conditions
            const iconElement = document.getElementById('weather-icon');
            iconElement.className = weatherDescription === "Clear" ? 'bi bi-sun' : 'bi bi-cloud'; // Exemple d'icône

            // Applique le background en fonction de la météo et de l'heure
            const weatherCard = document.getElementById('weather');

            // Si c'est la nuit (entre 19h et 6h du matin), applique un fond de nuit bleu foncé
            if (currentHour >= 19 || currentHour < 6) {
                console.log("Il fait nuit !");
                weatherCard.style.backgroundColor = '#1b019b'; // Bleu foncé pour la nuit
            } else {
                // Si c'est le jour, applique un fond clair
                weatherCard.style.backgroundColor = '#f8f9fa'; // Fond clair pour le jour
            }

            // Mettez à jour l'icône de l'heure en fonction de la journée ou de la nuit
            const timeIcon = document.getElementById('time-icon');
            timeIcon.className = currentHour >= 19 || currentHour < 6 ? 'bi bi-moon' : 'bi bi-sun';
            updateClock(timeIcon);

        } catch (error) {
            console.error("Erreur lors de la récupération des données météo :", error);
            document.getElementById('weather-info').innerHTML = 'Erreur de chargement';
        }
    }

    function updateClock(timeIcon) {
        const now = new Date();
        const currentHour = now.getHours();
        const currentDate = now.toLocaleDateString('fr-FR', {
            weekday: 'long', // Nom du jour
            year: 'numeric', // Année
            month: 'long', // Mois
            day: 'numeric' // Jour
        });

        timeIcon.className = currentHour >= 19 || currentHour < 6 ? 'bi bi-moon' : 'bi bi-sun';
        document.getElementById('clock-info').innerHTML = `${timeIcon.outerHTML} ${now.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})} - ${currentDate}`;
    }

    // Met à jour la météo au chargement de la page
    fetchWeather();
    setInterval(fetchWeather, 3600000); // Met à jour toutes les heures

    // Met à jour l'heure chaque seconde
    setInterval(() => {
        const timeIcon = document.getElementById('time-icon');
        updateClock(timeIcon);
    }, 1000); // Met à jour toutes les secondes
</script>
</body>
</html>
